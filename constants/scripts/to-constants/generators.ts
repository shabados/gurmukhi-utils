const toUnderscore = (str: string) => str.replaceAll('-', '_')
const toCamelCase = (str: string) =>
  str[0].toUpperCase() + str.slice(1).replaceAll(/[_-]([a-z])/g, (_, $1) => $1.toUpperCase())

type Variables = Record<string, unknown>

type File = {
  path: string
  content: string
}

type LanguageGenerator = (inputs: { name: string; variables: Variables }[]) => File[]

export const javascriptGenerator: LanguageGenerator = (inputs) =>
  inputs.map(({ name, variables }) => ({
    path: `javascript/src/constants/${name}.ts`,
    content: `
// This file is generated by the constants build script.
// Do not edit this file directly.

${Object.entries(variables)
  .map(([key, value]) => `export const ${key} = ${JSON.stringify(value, null, 2)} as const`)
  .join('\n\n')}
`,
  }))

export const pythonGenerator: LanguageGenerator = (inputs) => [
  ...inputs.map(({ name, variables }) => ({
    path: `python/gurmukhiutils/constants/${toUnderscore(name)}.py`,
    content: `
# This file is generated by the constants build script.
# Do not edit this file directly.

${Object.entries(variables)
  .map(([key, value]) => `${key} = ${JSON.stringify(value, null, 2)}`)
  .join('\n\n')}
`,
  })),
  {
    path: 'python/gurmukhiutils/constants/__init__.py',
    content: `
# This file is generated by the constants build script.
# Do not edit this file directly.
`,
  },
]

export const rubyGenerator: LanguageGenerator = (inputs) =>
  inputs.map(({ name, variables }) => ({
    path: `ruby/lib/constants/${toUnderscore(name)}.rb`,
    content: `
# This file is generated by the constants build script.
# Do not edit this file directly.

module ${toCamelCase(name)}Constants
  ${Object.entries(variables)
    .map(([key, value]) => `${key} = ${JSON.stringify(value, null, 2)}.freeze`)
    .join('\n\n')}
end
`,
  }))
